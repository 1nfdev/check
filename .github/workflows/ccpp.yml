name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_linux_autotools_default_args:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doc packages
      run: sudo apt-get install -y texlive texinfo texi2html doxygen
    - name: create configure
      run: autoreconf -i
    - name: configure default
      run: ./configure
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: sudo make install

  build_linux_autotools_other_args:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doc packages
      run: sudo apt-get install -y texlive texinfo texi2html doxygen
    - name: create configure
      run: autoreconf -i
    - name: configure default
      run: ./configure --disable-fork --disable-subunit --enable-snprintf-replacement --enable-timer-replacement
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: sudo make install

  build_linux_autotools_prereleasecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doc packages
      run: sudo apt-get install -y texlive texinfo texi2html doxygen
    - name: create configure
      run: autoreconf -i
    - name: configure default
      run: ./configure
    - name: make prereleasecheck
      run: make prereleasecheck

  build_linux_autotools_docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doc packages
      run: sudo apt-get install -y texlive texinfo texi2html doxygen
    - name: create configure
      run: autoreconf -i
    - name: configure default
      run: ./configure
    - name: make docs
      run: make doc/check_html
    - name: make doxygen 
      run: make doc/doxygen

  build_linux_autotools_example:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doc packages
      run: sudo apt-get install -y texlive texinfo texi2html doxygen
    - name: create configure
      run: autoreconf -i
    - name: configure default
      run: ./configure
    - name: make
      run: make
    - name: make install
      run: sudo make install
    - name: create configure example
      working-directory: doc/example
      run: autoreconf -i
    - name: configure example
      working-directory: doc/example
      run: ./configure
    - name: build example
      working-directory: doc/example
      run: make 
    - name: test example
      working-directory: doc/example
      run: make check
    
  build_linux_cmake:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cmake cversion
      run: cmake --version
    - name: create configs
      run: cmake .
    - name: make
      run: make
    - name: unit tests
      run: ctest -V
    - name: make install 
      run: sudo make install

  build_osx_autotools_default_args:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install maxtex
      run: brew cask install mactex
    - name: install doc programs
      run: brew install texi2html texinfo doxygen
    - name: install automake
      run: brew install automake
    - name: install pkg-config
      run: brew install pkgconfig
    - name: create configure
      run: autoreconf -i
    - name: configure
      run: ./configure --disable-timeout-tests
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: sudo make install
    
  build_osx_autotools_other_args:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install maxtex
      run: brew cask install mactex
    - name: install doc programs
      run: brew install texi2html texinfo doxygen
    - name: install automake
      run: brew install automake
    - name: install pkg-config
      run: brew install pkgconfig
    - name: create configure
      run: autoreconf -i
    - name: configure with args
      run: ./configure --disable-fork --disable-subunit --enable-snprintf-replacement --enable-timer-replacement --disable-timeout-tests 
    - name: make
      run: make
    - name: make check
      run: make check
    - name: make install
      run: sudo make install
  
  build_osx_autotools_docs:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install maxtex
      run: brew cask install mactex
    - name: install doc programs
      run: brew install texi2html texinfo doxygen
    - name: install automake
      run: brew install automake
    - name: install pkg-config
      run: brew install pkgconfig
    - name: create configure
      run: autoreconf -i
    - name: configure
      run: ./configure
    - name: make docs
      run: make doc/check_html
    - name: make doxygen 
      run: make doc/doxygen
      
  build_osx_autotools_example:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: install maxtex
      run: brew cask install mactex
    - name: install doc programs
      run: brew install texi2html texinfo doxygen
    - name: install automake
      run: brew install automake
    - name: install pkg-config
      run: brew install pkgconfig
    - name: create configure
      run: autoreconf -i
    - name: configure
      run: ./configure
    - name: make
      run: make
    - name: make install
      run: sudo make install
    - name: create configure example
      working-directory: doc/example
      run: autoreconf -i
    - name: configure example
      working-directory: doc/example
      run: ./configure
    - name: build example
      working-directory: doc/example
      run: make 
    - name: test example
      working-directory: doc/example
      run: make check
    
  build_osx_cmake:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: cmake cversion
      run: cmake --version
    - name: create configs
      run: cmake . -D CHECK_ENABLE_TIMEOUT_TESTS=0
    - name: make
      run: make
    - name: unit tests
      run: ctest -V
    - name: make install 
      run: sudo make install

  build_windows_vs16_cmake:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/setup-msbuild@v1.0.0
    - name: echo MSBuild
      run: msbuild -version
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      working-directory: build
      run: cmake -G "Visual Studio 16 2019" -DCMAKE_INSTALL_PREFIX=%P% -DCMAKE_BUILD_TYPE=Debug ..
    - name: vs build
      working-directory: build
      run: msbuild /p:Platform=x64 "ALL_BUILD.vcxproj"
    - name: vs test
      working-directory: build
      run: msbuild /p:Platform=x64 "RUN_TESTS.vcxproj"

  build_windows_msvc_cmake:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      working-directory: build
      run: cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX=%P% -DCMAKE_BUILD_TYPE=Debug ..
    - name: nmake
      working-directory: build
      run: nmake
    - name: nmake test
      working-directory: build
      run: nmake test VERBOSE=1 CTEST_OUTPUT_ON_FAILURE=TRUE
      
  build_windows_mingw32_cmake:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: mkdir build
      run: mkdir build
    - name: cmake configure
      working-directory: build
      run: cmake -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX=%P% -DCMAKE_BUILD_TYPE=Debug ..
    - name: mingw32-make
      working-directory: build
      run: mingw32-make
# TODO(#259): The floating point tests currently fail because the expected
# formatting for some floating values is wrong. When Check's tests are fixed
# to be more flexible enable this.
#    - name: test
#      working-directory: build
#      run: tests\check_check.exe
  
  build_windows_mingw64msys_autotools:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: add mingw to path
      run: echo "::add-path::C:\msys64\mingw64\bin"
    - name: add mingw to path
      run: echo "::add-path::C:\msys64\usr\bin"
    - name: autoreconf
      run: bash -c "autoreconf -i"
    - name: configure
      run: bash -c "./configure"
    - name: make
      run: bash -c "make"
    - name: test
      run: bash -c "tests/check_check"
