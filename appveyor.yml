# This is the configuration file for AppVeyor builds.
# Look at the following for reference:
# https://www.appveyor.com/docs/appveyor-yml

# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

#---------------------------------#
#    environment configuration    #
#---------------------------------#


environment:
  matrix:
  - platform: msvc
  - platform: vs2008
    arch: x86
  - platform: vs2010
    arch: x86
  - platform: vs2012
    arch: x86
  - platform: vs2013
    arch: x86
  - platform: vs2015
    arch: x86
  - platform: vs2017
    arch: x86
  - platform: vs2010_64
    arch: x64
  - platform: vs2012_64
    arch: x64
  - platform: vs2013_64
    arch: x64
  - platform: vs2015_64
    arch: x64
  - platform: vs2017_64
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    arch: x64
  - platform: vs2012_ARM
  - platform: vs2013_ARM
  - platform: vs2015_ARM
  - platform: vs2017_ARM
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
  - platform: cygwin
  - platform: mingw32
  - platform: mingw64msys

# scripts that are called at very beginning, before repo cloning
# init:

# clone directory
clone_folder: c:\projects\check

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  - STRING(SUBSTRING %platform% 1 2 compiler_id)
  - appveyor AddMessage -Category Information "Compiler ID : '%compiler_id%'"
  - appveyor AddMessage -Category Information "Architecture: '%arch%'"


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# scripts to run before build
before_build:
  - cd c:\projects\check
  # Remove the following from the path, as it will interfere with
  # the MinGW builds
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - if %platform%==msvc call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"
  - if %platform%==msvc cmake -G "NMake Makefiles" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2005 cmake -G "Visual Studio 8 2005" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2008 cmake -G "Visual Studio 9 2008" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2010 cmake -G "Visual Studio 10 2010" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2012 cmake -G "Visual Studio 11 2012" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2013 cmake -G "Visual Studio 12 2013" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2015 cmake -G "Visual Studio 14 2015" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2017 cmake -G "Visual Studio 15 2017" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2010_64 cmake -G "Visual Studio 10 2010 Win64" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2012_64 cmake -G "Visual Studio 11 2012 Win64" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2013_64 cmake -G "Visual Studio 12 2013 Win64" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2015_64 cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2017_64 cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2012_ARM cmake -G "Visual Studio 11 2012 ARM" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2013_ARM cmake -G "Visual Studio 12 2013 ARM" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2015_ARM cmake -G "Visual Studio 14 2015 ARM" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==vs2017_ARM cmake -G "Visual Studio 15 2017 ARM" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==cygwin set PATH=C:\cygwin\bin;%PATH%
  - if %platform%==cygwin bash -c "autoreconf -i"
  - if %platform%==cygwin bash -c "./configure"
  - if %platform%==mingw32 set PATH=C:\MinGW\bin;%PATH%
  - if %platform%==mingw32 cmake -G "MinGW Makefiles" -DCMAKE_INSTALL_PREFIX=%P%
  - if %platform%==mingw64msys set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%
  - if %platform%==mingw64msys bash -c "autoreconf -i"
  - if %platform%==mingw64msys bash -c "./configure"

#Platforms supported by AppVeyor, as of 2017-08-28
#see https://www.appveyor.com/docs/build-environment/
#Generators
#  Visual Studio 15 2017 [arch] = Generates Visual Studio 2017 project files.
#                                 Optional [arch] can be "Win64" or "ARM".
#  Visual Studio 14 2015 [arch] = Generates Visual Studio 2015 project files.
#                                 Optional [arch] can be "Win64" or "ARM".
#  Visual Studio 12 2013 [arch] = Generates Visual Studio 2013 project files.
#                                 Optional [arch] can be "Win64" or "ARM".
#  Visual Studio 11 2012 [arch] = Generates Visual Studio 2012 project files.
#                                 Optional [arch] can be "Win64" or "ARM".
#  Visual Studio 10 2010 [arch] = Generates Visual Studio 2010 project files.
#                                 Optional [arch] can be "Win64" or "IA64".
#  Visual Studio 9 2008         = Generates Visual Studio 2008 project files.
#  NMake Makefiles              = Generates NMake makefiles.
#  MinGW Makefiles              = Generates a make file for use with
#                                 mingw32-make.


build_script:
  # build code and unit tests
  - if %platform%==msvc nmake
  - if %compiler_id%==vs msbuild /p:Platform=%arch% "ALL_BUILD.vcxproj"
  - if %platform%==cygwin bash -c "make"
  - if %platform%==mingw32 mingw32-make
  - if %platform%==mingw64msys bash -c "make"

test_script:
  # run unit tests
  - echo Running unit tests...
  - if %platform%==msvc nmake test VERBOSE=1 CTEST_OUTPUT_ON_FAILURE=TRUE
  - if %compiler_id%==vs ctest --extra-verbose -C Release
  - if %platform%==cygwin bash -c "make check"
  - if %platform%==mingw32 tests\check_check.exe
  - if %platform%==mingw64msys bash -c "tests/check_check"

on_finish:
  - if %platform%==cygwin bash -c "cat tests/test-suite.log || true"

